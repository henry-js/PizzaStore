// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaStore.Lib.Data;

#nullable disable

namespace Lib.Migrations
{
    [DbContext(typeof(PizzaStoreContext))]
    [Migration("20240416033425_20240416Migration")]
    partial class _20240416Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("OrderPizzaTopping", b =>
                {
                    b.Property<int>("OrderPizzaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToppingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderPizzaId", "ToppingsId");

                    b.HasIndex("ToppingsId");

                    b.ToTable("OrderPizzaTopping");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("DeliveryDistance")
                        .HasColumnType("REAL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryDistance = 1.0,
                            FirstName = "John",
                            HouseNumber = "1",
                            LastName = "Doe",
                            PostCode = "LL572EG"
                        },
                        new
                        {
                            Id = 2,
                            DeliveryDistance = 2.0,
                            FirstName = "Alan",
                            HouseNumber = "2",
                            LastName = "Wake",
                            PostCode = "B161AN"
                        },
                        new
                        {
                            Id = 3,
                            DeliveryDistance = 3.0,
                            FirstName = "Ian",
                            HouseNumber = "3",
                            LastName = "Mile",
                            PostCode = "EH64DA"
                        },
                        new
                        {
                            Id = 4,
                            DeliveryDistance = 4.0,
                            FirstName = "Stephen",
                            HouseNumber = "4",
                            LastName = "Bonnell",
                            PostCode = "BR75PN"
                        },
                        new
                        {
                            Id = 5,
                            DeliveryDistance = 5.0,
                            FirstName = "Kate",
                            HouseNumber = "5",
                            LastName = "Braithwaite",
                            PostCode = "FY76SU"
                        });
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("VatPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CustomerDistance")
                        .HasColumnType("REAL");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.OrderPizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPizzas");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.PizzaBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PizzaBases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Deep Pan",
                            Price = 6.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Thin Crust",
                            Price = 5.00m
                        });
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ham",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mushrooms",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mediterranean vegetables",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Extra cheese",
                            Price = 1.50m
                        });
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Henry",
                            LastName = "James"
                        });
                });

            modelBuilder.Entity("OrderPizzaTopping", b =>
                {
                    b.HasOne("PizzaStore.Lib.Data.Models.OrderPizza", null)
                        .WithMany()
                        .HasForeignKey("OrderPizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Lib.Data.Models.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Invoice", b =>
                {
                    b.HasOne("PizzaStore.Lib.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Lib.Data.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Lib.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Order", b =>
                {
                    b.HasOne("PizzaStore.Lib.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Lib.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.OrderPizza", b =>
                {
                    b.HasOne("PizzaStore.Lib.Data.Models.PizzaBase", "Base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaStore.Lib.Data.Models.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Base");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PizzaStore.Lib.Data.Models.Order", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
